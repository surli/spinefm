package fr.unice.spinefm.ActionModel.UserActionModel.impl;import java.io.File;import java.io.IOException;import java.util.ArrayList;import java.util.List;import org.apache.log4j.Logger;import org.eclipse.emf.ecore.EObject;import fr.unice.spinefm.ActionModel.UserActionModel.UserAction;import fr.unice.spinefm.ActionModel.UserActionModel.UserActionModelFactory;import fr.unice.spinefm.ActionModel.UserActionModel.UserSavePast;import fr.unice.spinefm.HistoryModel.Past;import fr.unice.spinefm.core.Constants;import fr.unice.spinefm.exceptions.FatalSpineFMException;import fr.unice.spinefm.utils.PersistModel;public class UserSavePastImplDelegate extends UserSavePastImpl {	protected static Logger log = Logger.getLogger(UserSavePastImplDelegate.class);		@Override	public void apply() throws FatalSpineFMException {		log.info("\n\n\t\t Apply user action Save Past on path "+this.getDestPath()+" \n\n");		try {			this.saveModel(this.getDestPath());		} catch (IOException e) {			e.printStackTrace();			throw new FatalSpineFMException(e.getMessage(),this.getContextManager().getPast(),this.getStep());		}	}		private void saveModel(String path) throws IOException {		if (path == null || path.equals("")) {			path = Constants.DEFAULT_PAST_PATH;		}		Past toSave = this.getContextManager().getPast().clonePastWithoutSystemActions();		PersistModel.saveModel(path, "past.xmi", toSave);	}		@Override	public String getDescription() {		return "Save Past Model";	}		@Override	public UserAction cloneActionWithStringAttributes() {		UserSavePast result = UserActionModelFactory.eINSTANCE.createUserSavePast();		result.setDestPath(this.getDestPath());		return result;	}}