package fr.unice.spinefm.ActionModel.UserActionModel.impl.test;import static org.junit.Assert.assertEquals;import static org.junit.Assert.assertFalse;import static org.junit.Assert.assertTrue;import java.util.Set;import org.junit.Test;import fr.unice.spinefm.ActionModel.UserActionModel.UserAction;import fr.unice.spinefm.ActionModel.UserActionModel.UserActionModelFactory;import fr.unice.spinefm.ActionModel.UserActionModel.UserCreateContext;import fr.unice.spinefm.ActionModel.UserActionModel.UserSelect;import fr.unice.spinefm.ActionModel.UserActionModel.impl.UserCreateContextImplDelegate;import fr.unice.spinefm.ActionModel.UserActionModel.impl.UserSelectImplDelegate;import fr.unice.spinefm.FMModel.Feature;import fr.unice.spinefm.MSPLModel.DomainElement;import fr.unice.spinefm.ProcessModel.ConfigurationProcessStep;import fr.unice.spinefm.ProcessModel.Context;import fr.unice.spinefm.RFModel.ConfigurationState;import fr.unice.spinefm.exceptions.ElementNotFoundException;import fr.unice.spinefm.exceptions.FatalSpineFMException;import fr.unice.spinefm.fmengine.exceptions.FMEngineException;public class TestUserAction extends InitSimpleModel {	@Test	public void testCloneUserActionWithStringAttributes() throws ElementNotFoundException, FatalSpineFMException, FMEngineException {		this.initModel();		assertEquals(0,cm.getLocalContexts().size());		UserCreateContext ucc = UserActionModelFactory.eINSTANCE.createUserCreateContext();		ucc.initManualAction(cm);		ucc.apply();		Context c = (Context)ucc.getResult();				DomainElement de = cm.getMspl().getDomainElementByName("zone");		Feature f = de.getRefers_on().getFeatureFromName("GLC");		ConfigurationProcessStep cps = c.getCPSOfDE(de);		ConfigurationState cs = cps.getState();				assertFalse(cs.getSelectedFeatures().contains(f));				UserSelect usc = UserActionModelFactory.eINSTANCE.createUserSelect();		usc.initManualAction(cm);		usc.setContextID(c.getId());		usc.setDomainElementName("zone");		usc.setFeatureName("GLC");		usc.apply();				UserAction clone_ucc = ucc.cloneActionWithStringAttributes();		UserAction clone_usc = usc.cloneActionWithStringAttributes();				assertEquals(UserCreateContextImplDelegate.class, clone_ucc.getClass());		assertEquals(UserSelectImplDelegate.class, clone_usc.getClass());				UserCreateContext uccClone = (UserCreateContext)clone_ucc;		UserSelect uscClone = (UserSelect)clone_usc;				assertEquals(null, uccClone.getResult());				assertEquals(usc.getContextID(), uscClone.getContextID());		assertEquals(usc.getDomainElementName(), uscClone.getDomainElementName());		assertEquals(usc.getFeatureName(), uscClone.getFeatureName());		assertEquals(null, uscClone.getResult());	}}